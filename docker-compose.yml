version: '3.9'

services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik:/etc/traefik/dynamic:ro
      - ./certs:/certs:ro
    networks: [planning-network]
    restart: unless-stopped

  frontend:
    build: ./planningFront
    container_name: planningFrontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`planeasy.localhost`,`www.planeasy.localhost`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls=true"
      - "traefik.http.services.front.loadbalancer.server.port=80"
    depends_on: [backend]
    networks: [planning-network]
    restart: unless-stopped

  backend:
    build: ./planningBack
    container_name: planningBackend
    labels:
      - "traefik.enable=true"
      # Route /api sur le mÃªme host que le front
      - "traefik.http.routers.api1.rule=Host(`planeasy.localhost`,`www.planeasy.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api1.entrypoints=websecure"
      - "traefik.http.routers.api1.tls=true"
      # Optionnel : sous-domaine api.*
      - "traefik.http.routers.api2.rule=Host(`api.planeasy.localhost`)"
      - "traefik.http.routers.api2.entrypoints=websecure"
      - "traefik.http.routers.api2.tls=true"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    volumes:
      - ./planningBack:/app
    depends_on: [db]
    networks: [planning-network]
    restart: unless-stopped

  db:
    image: postgres:17
    container_name: planningDb
    environment:
      POSTGRES_DB: planningback
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [planning-network]
    restart: unless-stopped

networks:
  planning-network:
    driver: bridge

volumes:
  postgres_data: